{
  "openapi": "3.0.3",
  "info": {
    "title": "üöó Auto-√âcole API - Authentification Authentik",
    "description": "API compl√®te pour la gestion de l'authentification avec Authentik comme IAM central. Cette API permet l'inscription, la connexion, la gestion des utilisateurs et des tokens avec un syst√®me de contournement du Password Grant Flow.",
    "version": "1.0.0",
    "contact": {
      "name": "Support Auto-√âcole API",
      "email": "support@auto-ecole-api.com",
      "url": "https://auto-ecole-api.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Serveur de d√©veloppement local"
    },
    {
      "url": "https://api.auto-ecole.com",
      "description": "Serveur de production"
    }
  ],
  "tags": [
    {
      "name": "üîê Authentification",
      "description": "Endpoints d'authentification avec Authentik"
    },
    {
      "name": "üë§ Utilisateurs",
      "description": "Gestion des utilisateurs et profils"
    },
    {
      "name": "üîÑ Tokens",
      "description": "Gestion des tokens d'acc√®s et de rafra√Æchissement"
    },
    {
      "name": "‚ù§Ô∏è Sant√©",
      "description": "V√©rification de l'√©tat de l'API"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["üîê Authentification"],
        "summary": "üìù Inscription d'un nouvel utilisateur",
        "description": "Cr√©e un nouvel utilisateur dans Authentik et dans la base de donn√©es locale. Retourne l'URL d'authentification pour que l'utilisateur puisse se connecter.",
        "operationId": "registerUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              },
              "examples": {
                "candidat": {
                  "summary": "Inscription d'un candidat",
                  "value": {
                    "email": "jean.dupont@example.com",
                    "password": "Password123!",
                    "password_confirmation": "Password123!",
                    "nom": "Dupont",
                    "prenom": "Jean",
                    "contact": "0612345678",
                    "adresse": "123 Rue de la Paix, Paris",
                    "role": "candidat"
                  }
                },
                "responsable": {
                  "summary": "Inscription d'un responsable d'auto-√©cole",
                  "value": {
                    "email": "marie.martin@auto-ecole.com",
                    "password": "Responsable123!",
                    "password_confirmation": "Responsable123!",
                    "nom": "Martin",
                    "prenom": "Marie",
                    "contact": "0623456789",
                    "adresse": "456 Avenue des Champs, Lyon",
                    "role": "responsable_auto_ecole"
                  }
                },
                "admin": {
                  "summary": "Inscription d'un administrateur",
                  "value": {
                    "email": "admin@auto-ecole.com",
                    "password": "Admin123!",
                    "password_confirmation": "Admin123!",
                    "nom": "Admin",
                    "prenom": "Super",
                    "contact": "0634567890",
                    "adresse": "789 Boulevard Central, Marseille",
                    "role": "admin"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "‚úÖ Inscription r√©ussie",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterSuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Inscription r√©ussie. Redirigez l'utilisateur vers Authentik pour se connecter.",
                  "user": {
                    "id": "019a0e63-a1cd-7012-9586-57868bb66c6f",
                    "email": "jean.dupont@example.com",
                    "role": "candidat"
                  },
                  "auth_url": "http://5.189.156.115:31015/application/o/authorize/?client_id=JpMm7W7oeisa2EWDsfxyX0xNoF9SEYlOnKDfGxu2&redirect_uri=http%3A%2F%2Flocalhost%3A8000%2Fapi%2Fauth%2Fauthentik%2Fcallback&scope=openid+goauthentik.io%2Fapi+profile+email&response_type=code"
                }
              }
            }
          },
          "422": {
            "description": "‚ùå Erreur de validation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                },
                "example": {
                  "success": false,
                  "message": "Les donn√©es fournies ne sont pas valides.",
                  "errors": {
                    "email": ["Cette adresse email est d√©j√† utilis√©e."],
                    "password": ["Le mot de passe doit contenir au moins 8 caract√®res."]
                  }
                }
              }
            }
          },
          "500": {
            "description": "‚ùå Erreur serveur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login-direct": {
      "post": {
        "tags": ["üîê Authentification"],
        "summary": "üöÄ Connexion directe (Contournement Password Grant)",
        "description": "Authentifie un utilisateur directement via l'API Authentik en contournant le probl√®me du Password Grant Flow. Cette m√©thode utilise l'API Authentik directement pour v√©rifier les identifiants et g√©n√®re des tokens personnalis√©s.",
        "operationId": "loginDirect",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              },
              "examples": {
                "candidat": {
                  "summary": "Connexion d'un candidat",
                  "value": {
                    "email": "jean.dupont@example.com",
                    "password": "Password123!"
                  }
                },
                "responsable": {
                  "summary": "Connexion d'un responsable",
                  "value": {
                    "email": "marie.martin@auto-ecole.com",
                    "password": "Responsable123!"
                  }
                },
                "admin": {
                  "summary": "Connexion d'un administrateur",
                  "value": {
                    "email": "admin@auto-ecole.com",
                    "password": "Admin123!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "‚úÖ Connexion r√©ussie",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginSuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Connexion r√©ussie !",
                  "user": {
                    "id": "019a0e34-d153-7330-8cb6-80b14fd8811c",
                    "email": "jean.dupont@example.com",
                    "role": "candidat"
                  },
                  "access_token": "eyJ1c2VyX2lkIjoyOCwiZW1haWwiOiJjYW5kaWRhdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiY2FuZGlkYXRAdGVzdC5jb20iLCJncm91cHMiOlsiMDE0NWVmN2EtMWM1ZC00YzQwLWE0NTItNTI1NGY2YTQ5Y2NlIl0sImF0dHJpYnV0ZXMiOnsibm9tIjoiRHVwb250Iiwicm9sZSI6ImNhbmRpZGF0IiwicHJlbm9tIjoiSmVhbiIsImFkcmVzc2UiOiIxMjMgUnVlIGRlIFBhcmlzIiwiY29udGFjdCI6IjA2MTIzNDU2NzgifSwiZXhwIjoxNzYxMTgzOTU0LCJpYXQiOjE3NjExODAzNTQsImlzcyI6Imh0dHA6XC9cL2xvY2FsaG9zdCIsIm1ldGhvZCI6ImRpcmVjdF9hdXRoIn0=",
                  "refresh_token": "eyJ1c2VyX2lkIjoyOCwidHlwZSI6InJlZnJlc2giLCJleHAiOjE3NjM3NzIzNTQsImlhdCI6MTc2MTE4MDM1NCwibWV0aG9kIjoiZGlyZWN0X2F1dGgifQ==",
                  "token_type": "Bearer",
                  "expires_in": 3600,
                  "method": "direct_auth"
                }
              }
            }
          },
          "401": {
            "description": "‚ùå Identifiants incorrects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "message": "Identifiants incorrects. Veuillez v√©rifier votre email et mot de passe."
                }
              }
            }
          },
          "422": {
            "description": "‚ùå Erreur de validation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "‚ùå Erreur serveur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/auth-url": {
      "get": {
        "tags": ["üîê Authentification"],
        "summary": "üîó Obtenir l'URL d'authentification",
        "description": "G√©n√®re l'URL d'authentification pour l'Authorization Code Flow avec Authentik. Cette URL doit √™tre utilis√©e pour rediriger l'utilisateur vers Authentik pour s'authentifier.",
        "operationId": "getAuthUrl",
        "responses": {
          "200": {
            "description": "‚úÖ URL d'authentification g√©n√©r√©e",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUrlResponse"
                },
                "example": {
                  "success": true,
                  "auth_url": "http://5.189.156.115:31015/application/o/authorize/?client_id=JpMm7W7oeisa2EWDsfxyX0xNoF9SEYlOnKDfGxu2&redirect_uri=http%3A%2F%2Flocalhost%3A8000%2Fapi%2Fauth%2Fauthentik%2Fcallback&scope=openid+goauthentik.io%2Fapi+profile+email&response_type=code",
                  "message": "Redirigez l'utilisateur vers cette URL pour s'authentifier."
                }
              }
            }
          },
          "500": {
            "description": "‚ùå Erreur serveur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/authentik/redirect": {
      "get": {
        "tags": ["üîê Authentification"],
        "summary": "üîÑ Redirection vers Authentik",
        "description": "Redirige l'utilisateur vers Authentik pour l'authentification OAuth. Cette route est utilis√©e pour initier le flux d'authentification avec Authentik.",
        "operationId": "redirectToAuthentik",
        "responses": {
          "302": {
            "description": "üîÑ Redirection vers Authentik",
            "headers": {
              "Location": {
                "description": "URL de redirection vers Authentik",
                "schema": {
                  "type": "string",
                  "example": "http://5.189.156.115:31015/application/o/authorize/?client_id=..."
                }
              }
            }
          },
          "500": {
            "description": "‚ùå Erreur serveur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/authentik/callback": {
      "get": {
        "tags": ["üîê Authentification"],
        "summary": "üìû Callback d'authentification Authentik",
        "description": "G√®re le callback d'authentification apr√®s que l'utilisateur s'est connect√© sur Authentik. Cette route est appel√©e automatiquement par Authentik apr√®s l'authentification.",
        "operationId": "handleAuthentikCallback",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Code d'autorisation fourni par Authentik",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Param√®tre d'√©tat pour la s√©curit√©",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "‚úÖ Authentification r√©ussie",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallbackSuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Authentification r√©ussie.",
                  "user": {
                    "id": "019a0e34-d153-7330-8cb6-80b14fd8811c",
                    "email": "jean.dupont@example.com",
                    "role": "candidat"
                  },
                  "access_token": "eyJ1c2VyX2lkIjoyOCwiZW1haWwiOi...",
                  "token_type": "Bearer"
                }
              }
            }
          },
          "400": {
            "description": "‚ùå Erreur de callback",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "‚ùå Erreur serveur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": ["üë§ Utilisateurs"],
        "summary": "üë§ Informations de l'utilisateur connect√©",
        "description": "R√©cup√®re les informations compl√®tes de l'utilisateur actuellement connect√©, incluant ses donn√©es personnelles et son r√¥le.",
        "operationId": "getUserProfile",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "‚úÖ Informations utilisateur r√©cup√©r√©es",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                },
                "example": {
                  "success": true,
                  "user": {
                    "id": "019a0e34-d153-7330-8cb6-80b14fd8811c",
                    "email": "jean.dupont@example.com",
                    "role": "candidat",
                    "personne": {
                      "id": "019a0e35-d154-7331-8cb7-80b14fd8811d",
                      "nom": "Dupont",
                      "prenom": "Jean",
                      "email": "jean.dupont@example.com",
                      "contact": "0612345678",
                      "adresse": "123 Rue de la Paix, Paris"
                    },
                    "created_at": "2025-10-22T21:24:46.000000Z",
                    "updated_at": "2025-10-22T21:24:46.000000Z"
                  }
                }
              }
            }
          },
          "401": {
            "description": "‚ùå Non authentifi√©",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "message": "Non authentifi√©. Veuillez vous connecter."
                }
              }
            }
          },
          "500": {
            "description": "‚ùå Erreur serveur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["üîÑ Tokens"],
        "summary": "üö™ D√©connexion de l'utilisateur",
        "description": "D√©connecte l'utilisateur en r√©voquant ses tokens d'acc√®s et de rafra√Æchissement dans Authentik.",
        "operationId": "logoutUser",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": {
                    "type": "string",
                    "description": "Token de rafra√Æchissement √† r√©voquer",
                    "example": "eyJ1c2VyX2lkIjoyOCwidHlwZSI6InJlZnJlc2giLCJleHAiOjE3NjM3NzIzNTQsImlhdCI6MTc2MTE4MDM1NCwibWV0aG9kIjoiZGlyZWN0X2F1dGgifQ=="
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "‚úÖ D√©connexion r√©ussie",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                },
                "example": {
                  "success": true,
                  "message": "D√©connexion r√©ussie. √Ä bient√¥t !"
                }
              }
            }
          },
          "401": {
            "description": "‚ùå Token manquant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "message": "Token d'authentification manquant."
                }
              }
            }
          },
          "500": {
            "description": "‚ùå Erreur serveur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": ["üîÑ Tokens"],
        "summary": "üîÑ Rafra√Æchir le token d'acc√®s",
        "description": "Renouvelle le token d'acc√®s en utilisant le token de rafra√Æchissement. Cette op√©ration permet de prolonger la session sans demander √† l'utilisateur de se reconnecter.",
        "operationId": "refreshToken",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["refresh_token"],
                "properties": {
                  "refresh_token": {
                    "type": "string",
                    "description": "Token de rafra√Æchissement",
                    "example": "eyJ1c2VyX2lkIjoyOCwidHlwZSI6InJlZnJlc2giLCJleHAiOjE3NjM3NzIzNTQsImlhdCI6MTc2MTE4MDM1NCwibWV0aG9kIjoiZGlyZWN0X2F1dGgifQ=="
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "‚úÖ Token rafra√Æchi avec succ√®s",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                },
                "example": {
                  "success": true,
                  "message": "Token rafra√Æchi avec succ√®s.",
                  "access_token": "eyJ1c2VyX2lkIjoyOCwiZW1haWwiOiJjYW5kaWRhdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiY2FuZGlkYXRAdGVzdC5jb20iLCJncm91cHMiOlsiMDE0NWVmN2EtMWM1ZC00YzQwLWE0NTItNTI1NGY2YTQ5Y2NlIl0sImF0dHJpYnV0ZXMiOnsibm9tIjoiRHVwb250Iiwicm9sZSI6ImNhbmRpZGF0IiwicHJlbm9tIjoiSmVhbiIsImFkcmVzc2UiOiIxMjMgUnVlIGRlIFBhcmlzIiwiY29udGFjdCI6IjA2MTIzNDU2NzgifSwiZXhwIjoxNzYxMTgzOTU0LCJpYXQiOjE3NjExODAzNTQsImlzcyI6Imh0dHA6XC9cL2xvY2FsaG9zdCIsIm1ldGhvZCI6ImRpcmVjdF9hdXRoIn0=",
                  "refresh_token": "eyJ1c2VyX2lkIjoyOCwidHlwZSI6InJlZnJlc2giLCJleHAiOjE3NjM3NzIzNTQsImlhdCI6MTc2MTE4MDM1NCwibWV0aG9kIjoiZGlyZWN0X2F1dGgifQ==",
                  "token_type": "Bearer",
                  "expires_in": 3600
                }
              }
            }
          },
          "400": {
            "description": "‚ùå Refresh token manquant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "message": "Le refresh token est obligatoire."
                }
              }
            }
          },
          "401": {
            "description": "‚ùå Refresh token invalide",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "message": "Impossible de rafra√Æchir le token. Veuillez vous reconnecter."
                }
              }
            }
          },
          "500": {
            "description": "‚ùå Erreur serveur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/health": {
      "get": {
        "tags": ["‚ù§Ô∏è Sant√©"],
        "summary": "‚ù§Ô∏è V√©rification de l'√©tat de l'API",
        "description": "V√©rifie que l'API est op√©rationnelle et retourne des informations sur son √©tat.",
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "‚úÖ API op√©rationnelle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                },
                "example": {
                  "status": "ok",
                  "message": "API Auto-√âcole fonctionnelle",
                  "timestamp": "2025-10-22T21:24:46.000000Z",
                  "version": "1.0.0",
                  "environment": "local"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Token d'acc√®s JWT obtenu via l'authentification"
      }
    },
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "required": ["email", "password", "password_confirmation", "nom", "prenom", "contact", "role"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Adresse email de l'utilisateur",
            "example": "jean.dupont@example.com"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "description": "Mot de passe de l'utilisateur",
            "example": "Password123!"
          },
          "password_confirmation": {
            "type": "string",
            "description": "Confirmation du mot de passe",
            "example": "Password123!"
          },
          "nom": {
            "type": "string",
            "description": "Nom de famille de l'utilisateur",
            "example": "Dupont"
          },
          "prenom": {
            "type": "string",
            "description": "Pr√©nom de l'utilisateur",
            "example": "Jean"
          },
          "contact": {
            "type": "string",
            "description": "Num√©ro de t√©l√©phone de l'utilisateur",
            "example": "0612345678"
          },
          "adresse": {
            "type": "string",
            "description": "Adresse de l'utilisateur",
            "example": "123 Rue de la Paix, Paris",
            "nullable": true
          },
          "role": {
            "type": "string",
            "enum": ["candidat", "responsable_auto_ecole", "admin"],
            "description": "R√¥le de l'utilisateur dans le syst√®me",
            "example": "candidat"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Adresse email de l'utilisateur",
            "example": "jean.dupont@example.com"
          },
          "password": {
            "type": "string",
            "description": "Mot de passe de l'utilisateur",
            "example": "Password123!"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Identifiant unique de l'utilisateur",
            "example": "019a0e34-d153-7330-8cb6-80b14fd8811c"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Adresse email de l'utilisateur",
            "example": "jean.dupont@example.com"
          },
          "role": {
            "type": "string",
            "enum": ["candidat", "responsable_auto_ecole", "admin"],
            "description": "R√¥le de l'utilisateur",
            "example": "candidat"
          }
        }
      },
      "Personne": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Identifiant unique de la personne",
            "example": "019a0e35-d154-7331-8cb7-80b14fd8811d"
          },
          "nom": {
            "type": "string",
            "description": "Nom de famille",
            "example": "Dupont"
          },
          "prenom": {
            "type": "string",
            "description": "Pr√©nom",
            "example": "Jean"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Adresse email",
            "example": "jean.dupont@example.com"
          },
          "contact": {
            "type": "string",
            "description": "Num√©ro de t√©l√©phone",
            "example": "0612345678"
          },
          "adresse": {
            "type": "string",
            "description": "Adresse compl√®te",
            "example": "123 Rue de la Paix, Paris",
            "nullable": true
          }
        }
      },
      "RegisterSuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indique si l'op√©ration a r√©ussi",
            "example": true
          },
          "message": {
            "type": "string",
            "description": "Message de confirmation",
            "example": "Inscription r√©ussie. Redirigez l'utilisateur vers Authentik pour se connecter."
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "auth_url": {
            "type": "string",
            "format": "uri",
            "description": "URL d'authentification Authentik",
            "example": "http://5.189.156.115:31015/application/o/authorize/?client_id=..."
          }
        }
      },
      "LoginSuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indique si l'op√©ration a r√©ussi",
            "example": true
          },
          "message": {
            "type": "string",
            "description": "Message de confirmation",
            "example": "Connexion r√©ussie !"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "access_token": {
            "type": "string",
            "description": "Token d'acc√®s JWT",
            "example": "eyJ1c2VyX2lkIjoyOCwiZW1haWwiOi..."
          },
          "refresh_token": {
            "type": "string",
            "description": "Token de rafra√Æchissement",
            "example": "eyJ1c2VyX2lkIjoyOCwidHlwZSI6In..."
          },
          "token_type": {
            "type": "string",
            "description": "Type de token",
            "example": "Bearer"
          },
          "expires_in": {
            "type": "integer",
            "description": "Dur√©e de validit√© du token en secondes",
            "example": 3600
          },
          "method": {
            "type": "string",
            "description": "M√©thode d'authentification utilis√©e",
            "example": "direct_auth"
          }
        }
      },
      "AuthUrlResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indique si l'op√©ration a r√©ussi",
            "example": true
          },
          "auth_url": {
            "type": "string",
            "format": "uri",
            "description": "URL d'authentification Authentik",
            "example": "http://5.189.156.115:31015/application/o/authorize/?client_id=..."
          },
          "message": {
            "type": "string",
            "description": "Message d'information",
            "example": "Redirigez l'utilisateur vers cette URL pour s'authentifier."
          }
        }
      },
      "CallbackSuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indique si l'op√©ration a r√©ussi",
            "example": true
          },
          "message": {
            "type": "string",
            "description": "Message de confirmation",
            "example": "Authentification r√©ussie."
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "access_token": {
            "type": "string",
            "description": "Token d'acc√®s JWT",
            "example": "eyJ1c2VyX2lkIjoyOCwiZW1haWwiOi..."
          },
          "token_type": {
            "type": "string",
            "description": "Type de token",
            "example": "Bearer"
          }
        }
      },
      "UserProfileResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indique si l'op√©ration a r√©ussi",
            "example": true
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "description": "Identifiant unique de l'utilisateur",
                "example": "019a0e34-d153-7330-8cb6-80b14fd8811c"
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "Adresse email de l'utilisateur",
                "example": "jean.dupont@example.com"
              },
              "role": {
                "type": "string",
                "enum": ["candidat", "responsable_auto_ecole", "admin"],
                "description": "R√¥le de l'utilisateur",
                "example": "candidat"
              },
              "personne": {
                "$ref": "#/components/schemas/Personne"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "Date de cr√©ation du compte",
                "example": "2025-10-22T21:24:46.000000Z"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "description": "Date de derni√®re modification",
                "example": "2025-10-22T21:24:46.000000Z"
              }
            }
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indique si l'op√©ration a r√©ussi",
            "example": true
          },
          "message": {
            "type": "string",
            "description": "Message de confirmation",
            "example": "D√©connexion r√©ussie. √Ä bient√¥t !"
          }
        }
      },
      "RefreshTokenResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indique si l'op√©ration a r√©ussi",
            "example": true
          },
          "message": {
            "type": "string",
            "description": "Message de confirmation",
            "example": "Token rafra√Æchi avec succ√®s."
          },
          "access_token": {
            "type": "string",
            "description": "Nouveau token d'acc√®s JWT",
            "example": "eyJ1c2VyX2lkIjoyOCwiZW1haWwiOi..."
          },
          "refresh_token": {
            "type": "string",
            "description": "Nouveau token de rafra√Æchissement",
            "example": "eyJ1c2VyX2lkIjoyOCwidHlwZSI6In..."
          },
          "token_type": {
            "type": "string",
            "description": "Type de token",
            "example": "Bearer"
          },
          "expires_in": {
            "type": "integer",
            "description": "Dur√©e de validit√© du token en secondes",
            "example": 3600
          }
        }
      },
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "√âtat de l'API",
            "example": "ok"
          },
          "message": {
            "type": "string",
            "description": "Message descriptif",
            "example": "API Auto-√âcole fonctionnelle"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Horodatage de la v√©rification",
            "example": "2025-10-22T21:24:46.000000Z"
          },
          "version": {
            "type": "string",
            "description": "Version de l'API",
            "example": "1.0.0"
          },
          "environment": {
            "type": "string",
            "description": "Environnement d'ex√©cution",
            "example": "local"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indique si l'op√©ration a r√©ussi",
            "example": false
          },
          "message": {
            "type": "string",
            "description": "Message d'erreur",
            "example": "Une erreur est survenue."
          },
          "error": {
            "type": "string",
            "description": "D√©tails de l'erreur (en mode debug uniquement)",
            "example": "Token d'authentification manquant.",
            "nullable": true
          }
        }
      },
      "ValidationErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indique si l'op√©ration a r√©ussi",
            "example": false
          },
          "message": {
            "type": "string",
            "description": "Message d'erreur de validation",
            "example": "Les donn√©es fournies ne sont pas valides."
          },
          "errors": {
            "type": "object",
            "description": "D√©tails des erreurs de validation par champ",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": {
              "email": ["Cette adresse email est d√©j√† utilis√©e."],
              "password": ["Le mot de passe doit contenir au moins 8 caract√®res."]
            }
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Documentation compl√®te Authentik",
    "url": "https://goauthentik.io/docs/"
  }
}
